name: RunBrowserStackGHAction

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:
  

env:
    DOTNETVERSION: 8.0.403
    BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
    BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

jobs:
  testiOS:
    runs-on: macos-14
    
    steps:
      - uses: actions/checkout@v2

      https://docs.github.com/en/actions/deployment/deploying-xcode-applications/installing-an-apple-certificate-on-macos-runners-for-xcode-development
      github docs for installing cert and provisioning profile
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNETVERSION}}

      - name: Install .NET MAUI
        shell: bash
        run: |
          dotnet nuget locals all --clear
          dotnet workload install maui 

      - name: Install Appium
        shell: bash
        run: |
          npm install -g appium
          appium driver install xcuitest

      - name: Restore nuget packages
        run: |
          dotnet restore BasicAppiumNunitSample/UITests.iOS/UITests.iOS.csproj
      
      - name: Build .NET MAUI app iOS
        run: |
          dotnet publish BasicAppiumNunitSample/MauiApp/BasicAppiumNunitSample.csproj -f net8.0-iOS -c Release -p:BuildIpa=true

      - name: Install BrowserStack dotnet tool
        shell: bash
        run: |
          cd BasicAppiumNunitSample/UITests.iOS
          dotnet tool install browserstack-sdk --version 1.16.3 --create-manifest-if-needed
          dotnet browserstack-sdk setup-dotnet --dotnet-path "." --dotnet-version "8.0.403" --yes

      - name: Build Appium BrowserStack Tests
        shell: bash
        run: |
          dotnet build BasicAppiumNunitSample/UITests.iOS/UITests.iOS.csproj -c Release
      
      - name: Run Appium BrowserStack Tests
        shell: bash
        run: |
          cd BasicAppiumNunitSample/UITests.iOS
          ./dotnet test

  testDroid:
    runs-on: windows-2022
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET SDK ${{env.DOTNETVERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '${{env.DOTNETVERSION}}'
          
      - name: Install .NET MAUI
        shell: pwsh
        run: |
          & dotnet nuget locals all --clear
          & dotnet workload install maui 

      - name: Install Appium
        shell: pwsh
        run: |
          npm install -g appium
          appium driver install uiautomator2

      - name: Restore nuget packages
        run: |
          dotnet restore BasicAppiumNunitSample/BasicAppiumNunitSample.sln

      - name: Build .NET MAUI app Android
        run: |
          dotnet publish BasicAppiumNunitSample/MauiApp/BasicAppiumNunitSample.csproj -f net8.0-android -c Release

      - name: Build Appium BrowserStack Tests
        shell: bash
        run: |
          dotnet build BasicAppiumNunitSample/UITests.Android/UITests.Android.csproj -c Release
      
      - name: Run Appium BrowserStack Tests
        shell: bash
        run: |
          dotnet test BasicAppiumNunitSample/UITests.Android/UITests.Android.csproj -c Release
          
